> # 1) Multivariate Ridge Regression
> EstimRidge = VARshrink(Y, p = 1, const = 'const', method = 'ridge', lambda = NULL)
> EstimRidge
VARshrink Estimation Results:
=============================
Call:
VARshrink(Y = Y, p = 1, const_type = "const", method = "ridge", 
    lambda = NULL)

Estimated coefficients:
    Y1.lag1  Y2.lag1    const
Y1 0.261073 0.102723 0.156051
Y2 0.121217 0.527687 0.605825

$Sigma for noise:
         Y1       Y2
Y1 0.008358 0.000913
Y2 0.000913 0.011597

$dof for noise: Inf (estimated: FALSE ) 
$lambda: 0.01 0.05 0.1 0.5 1 5 10 50 100 500 (estimated: TRUE ) 
$GCV: 0.02006 0.02194 0.02382 0.06302 0.14841 0.83128 1.25956 1.90499 2.01992 2.11962 


> # 2) A Nonparametric Shrinkage Method by Opgen-Rein & Strimmer (2007)
> EstimNS = VARshrink(Y, p = 1, const = 'const', method = 'ns', lambda = NULL, lambda_var = NULL)
> EstimNS
VARshrink Estimation Results:
=============================
Call:
VARshrink(Y = Y, p = 1, const_type = "const", method = "ns", 
    lambda = NULL, lambda_var = NULL)

Estimated coefficients:
    Y1.lag1   Y2.lag1    const
Y1 0.387697 -0.012579 0.267390
Y2 0.015823  0.195101 1.120196

$Sigma for noise:
         Y1       Y2
Y1 0.007826 0.000770
Y2 0.000770 0.010463

$dof for noise: Inf (estimated: FALSE ) 
$lambda: 0.182356 (estimated: TRUE ) 
$lambda_var: 1 (estimated: TRUE ) 


> # 3-1) A Full Bayesian Method Using Gibbs MCMC (known fixed dof) by Ni & Sun (2005)
> myDof_here = 6
> EstimFB1 = VARshrink(Y, p = 1, const = 'const', method = 'fbayes', dof = myDof_here, 
+                  burnincycle = 1000, mcmccycle = 2000)
> EstimFB1
VARshrink Estimation Results:
=============================
Call:
VARshrink(Y = Y, p = 1, const_type = "const", method = "fbayes", 
    dof = myDof_here, burnincycle = 1000, mcmccycle = 2000)

Estimated coefficients:
    Y1.lag1   Y2.lag1    const
Y1 0.441881 -0.030132 0.268776
Y2 0.043424  0.255240 1.022728

$Sigma for noise:
         Y1      Y2
Y1 0.006308 0.00033
Y2 0.000330 0.00840

$dof for noise: 6 (estimated: FALSE ) 
$lambda: 1.334666 (estimated: TRUE ) 


> # 3-2) (unknown dof)
> EstimFB2 = VARshrink(Y, p = 1, const = 'const', method = 'fbayes', dof = NULL, 
+                  burnincycle = 1000, mcmccycle = 2000)
> EstimFB2
VARshrink Estimation Results:
=============================
Call:
VARshrink(Y = Y, p = 1, const_type = "const", method = "fbayes", 
    dof = NULL, burnincycle = 1000, mcmccycle = 2000)

Estimated coefficients:
    Y1.lag1   Y2.lag1    const
Y1 0.438783 -0.024274 0.261798
Y2 0.041781  0.259075 1.017998

$Sigma for noise:
         Y1       Y2
Y1 0.006803 0.000365
Y2 0.000365 0.008910

$dof for noise: 8.206131 (estimated: TRUE ) 
$lambda: 1.396243 (estimated: TRUE ) 


> # 4-1) A Semiparametric Shrinkage method (known fixed dof) by Lee, Choi & Kim (2016)
> myDof_here = 6
> EstimSB1 = VARshrink(Y, p = 1, const = 'const', method = 'sbayes', dof = myDof_here, 
+                  lambda = NULL, lambda_var = NULL, prior_type = 'NCJ', num_folds = 5, m0 = ncol(Y))
> EstimSB1
VARshrink Estimation Results:
=============================
Call:
VARshrink(Y = Y, p = 1, const_type = "const", method = "sbayes", 
    lambda = NULL, lambda_var = NULL, dof = myDof_here, prior_type = "NCJ", 
    num_folds = 5, m0 = ncol(Y))

Estimated coefficients:
    Y1.lag1   Y2.lag1    const
Y1 0.447771 -0.013516 0.248414
Y2 0.046828  0.319148 0.907047

$Sigma for noise:
         Y1       Y2
Y1 0.006252 0.000561
Y2 0.000561 0.008902

$dof for noise: 6 (estimated: FALSE ) 
$lambda: 0.0007981101 (estimated: TRUE ) 
$lambda_var: 1 (estimated: TRUE ) 


> # 4-2) (unknown dof)
> EstimSB2 = VARshrink(Y, p = 1, const = 'const', method = 'sbayes', dof = NULL, 
+                  lambda = NULL, lambda_var = NULL, prior_type = 'NCJ', num_folds = 5, m0 = ncol(Y))
> EstimSB2
VARshrink Estimation Results:
=============================
Call:
VARshrink(Y = Y, p = 1, const_type = "const", method = "sbayes", 
    lambda = NULL, lambda_var = NULL, dof = NULL, prior_type = "NCJ", 
    num_folds = 5, m0 = ncol(Y))

Estimated coefficients:
    Y1.lag1   Y2.lag1    const
Y1 0.453087 -0.029138 0.267199
Y2 0.063508  0.308845 0.912141

$Sigma for noise:
         Y1       Y2
Y1 0.005095 0.000455
Y2 0.000455 0.007532

$dof for noise: 2 (estimated: TRUE ) 
$lambda: 0.0007981101 (estimated: TRUE ) 
$lambda_var: 1 (estimated: TRUE )


> # 5) K-fold Cross Validation Alternative for VAR coefficient shrinkage estimation
> # 5-1) (known fixed dof)
> myDof_here = 6
> EstimKCV1 = VARshrink(Y, p = 1, const = 'const', method = 'kcv', dof = myDof_here, 
+                   lambda = NULL, lambda_var = NULL, prior_type = 'NCJ', num_folds = 5, m0 = ncol(Y))
> EstimKCV1
VARshrink Estimation Results:
=============================
Call:
VARshrink(Y = Y, p = 1, const_type = "const", method = "kcv", 
    lambda = NULL, lambda_var = NULL, dof = myDof_here, prior_type = "NCJ", 
    num_folds = 5, m0 = ncol(Y))

Estimated coefficients:
    Y1.lag1   Y2.lag1    const
Y1 0.448641 -0.007133 0.233538
Y2 0.053627  0.340554 0.898151

$Sigma for noise:
         Y1       Y2
Y1 0.005959 0.000603
Y2 0.000603 0.009541

$dof for noise: 6 (estimated: FALSE ) 
$lambda: 0.001 (estimated: TRUE ) 
$lambda_var: 0.001 (estimated: TRUE ) 


> # 5-2) (unknown dof)
> EstimKCV2 = VARshrink(Y, p = 1, const = 'const', method = 'kcv', dof = NULL, 
+                  lambda = NULL, lambda_var = NULL, prior_type = 'NCJ', num_folds = 5, m0 = ncol(Y))
> EstimKCV2
VARshrink Estimation Results:
=============================
Call:
VARshrink(Y = Y, p = 1, const_type = "const", method = "kcv", 
    lambda = NULL, lambda_var = NULL, dof = NULL, prior_type = "NCJ", 
    num_folds = 5, m0 = ncol(Y))

Estimated coefficients:
    Y1.lag1   Y2.lag1    const
Y1 0.540276 -0.068315 0.284652
Y2 0.119849  0.306864 0.916748

$Sigma for noise:
         Y1       Y2
Y1 0.004396 0.000531
Y2 0.000531 0.007542

$dof for noise: 0.2 (estimated: TRUE ) 
$lambda: 0.001 (estimated: TRUE ) 
$lambda_var: 0.001 (estimated: TRUE )