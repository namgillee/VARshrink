앞으로 할 작업들: 

1. 함수 입력값 고치기: VARshrink() 함수의 입력을 vars::VAR() 함수와 맞추기

2. 함수 출력값 고치기: VARshrink() 함수의 출력을 vars::VAR() 함수와 맞추기 

	1) 상속: class <- c("varshrinkest', "varest")

	2) "varshrinkest"의 field 조정

	3) class "VARparam" 고치기 -- field 중 "varparam"이었던 것

3. const_type = "mean", method = c("sbayes", "fbayes") 오류 고치기 

	행렬 크기 오류: 

	VARshrink(diff(Canada), 1, const_type = "mean", method = "sbayes")

	Error in matrix(Dv, d * p + 1, d) * (t(eXX$vectors) %*% mXY %*% eVhat$vectors) : 
	  non-conformable arrays
	In addition: Warning message:
	In matrix(Dv, d * p + 1, d) :
	  data length [32] is not a sub-multiple or multiple of the number of rows [9]

4. #' importFrom 계열의 코멘트 이용하기 



================== VARshrink() ==================

# Usage
# VARshrink  <- function(Y, p = 1, const_type = c('const', 'none', 'mean'),
#                    method = c('ridge', 'ns', 'fbayes', 'sbayes','kcv'),
#                    lambda = NULL, lambda_var = NULL, dof = Inf, ...)

# Output:
#    an object of class 'varshrinkest' with components:
#       $varparam
#       $se.varparam
#       $p, $K, $obs, $totobs,
#       $const_type, $method,
#       $lambda, $lambda_var
#       $call

Class 'VARparam': An object of class is a list with the following attributes: 

  Coef 
  Sigma 
  dof

================== VAR() ==================

VAR(y, p = 1, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL, lag.max = NULL,
ic = c("AIC", "HQ", "SC", "FPE"))

# Output: 
#  A list with class attribute ‘varest’ holding the following elements:
#    varresult	list of ‘lm’ objects.
#    datamat	The data matrix of the endogenous and explanatory variables.
#    y		The data matrix of the endogenous variables
#    type		A character, specifying the deterministic regressors.
#    p		An integer specifying the lag order.
#    K		An integer specifying the dimension of the VAR.
#    obs		An integer specifying the number of used observations.
#    totobs	An integer specifying the total number of observations.
#    restrictions	Either NULL or a matrix object containing the zero restrictions of the VAR(p).
#    call		The call to VAR().

Class 'lm': An object of class "lm" is a list containing at least the following components:

  coefficients	a named vector of coefficients
  residuals	the residuals, that is response minus fitted values.
  fitted.values	the fitted mean values.
  rank		the numeric rank of the fitted linear model.
  weights		(only for weighted fits) the specified weights.
  df.residual	the residual degrees of freedom.
  call		the matched call.
  terms		the terms object used.
  contrasts	(only where relevant) the contrasts used.
  xlevels		(only where relevant) a record of the levels of the factors used in fitting.
  offset		the offset used (missing if none were used).
  y		if requested, the response used.
  x		if requested, the model matrix used.
  model		if requested (the default), the model frame used.
  na.action	(where relevant) information returned by model.frame on the special handling of NAs.

================== BVAR() ==================
class bvar 
   너무 복잡... 또한 모든 MCMC값을 저장하므로 메모리 한계

================== MTS package ==================
특별한 패키지를 사용하지 않는다. ??? 그럼 어떻게 시계열기능구현??

================== lm.ridge ==================

class 'ridgelm': An object is a list with components

  coef		matrix of coefficients, 
		one row for each value of lambda. 
		Note that these are not on the original scale and are for use by the coef method.
  scales		scalings used on the X matrix.
  Inter		was intercept included?
  lambda		vector of lambda values
  ym		mean of y
  xm		column means of x matrix
  GCV		vector of GCV values
  kHKB		HKB estimate of the ridge constant.
  kLW		L-W estimate of the ridge constant.

